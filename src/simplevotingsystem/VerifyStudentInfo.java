/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simplevotingsystem;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author UMAGAGEE
 */
public class VerifyStudentInfo extends javax.swing.JFrame {
    Connection con=null;
    Statement stm=null;
    ResultSet rs=null;
    PreparedStatement ps=null;
    String imagePath=null;
    String username,verify;
    /**
     * Creates new form StudentInfo
     */
    public VerifyStudentInfo() {
        initComponents();
         setLocationRelativeTo(null);
         //con=ConnectionToDatabase.conn();
          con=creatConnection.conn();
         this.verify=verify;
         //showDept();
         
    }
    
     int pos=0;
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        textStudentID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONFIRM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 50))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 51, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText(" Index Number:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, -1));

        txtCode.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel1.add(txtCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 280, 60));

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jButton1.setText("PROCEED");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, 260, 70));

        textStudentID.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        textStudentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textStudentIDActionPerformed(evt);
            }
        });
        jPanel1.add(textStudentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 280, 60));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText(" Code:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, -1, -1));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   String id = textStudentID.getText().trim();
   String code = txtCode.getText().trim().toUpperCase();
 try{
            //checking index Number and generated Code
            if(id.equals("") || code.equals("")){
         JOptionPane.showMessageDialog(null, "One or More Fields is empty");
            }else{
                ps=con.prepareStatement("Select FK1_INDEXNUMBER,code from Verification where FK1_INDEXNUMBER=? AND code=?");
           ps.setString(1, id);
           ps.setString(2, code);
            rs=ps.executeQuery();
      if(rs.next()){
          String user=rs.getString("FK1_INDEXNUMBER");
         String pass=rs.getString("code");
          if(user.equals(id) && (pass.equals(code)) ){
              //Checking for Already Vote
        ps=con.prepareStatement("Select StudentID,code from vericationhistory where StudentID=? AND code=?");
           ps.setString(1, id);
           ps.setString(2, code);
           rs=ps.executeQuery();
                 if(rs.next()){
                     String userid=rs.getString("StudentID");
                     String coded=rs.getString("code");
                if(userid.equals(id) && (coded.equals(code)) ){
                JOptionPane.showMessageDialog(null, "Please You have already Vote");
                } else{
                    
                         //Recording the details of student who is about to vote
                ps=con.prepareStatement("INSERT INTO vericationhistory (StudentID,code) values(?,?)");

                ps.setString(1, textStudentID.getText().trim());
                ps.setString(2, txtCode.getText());
                ps.execute();
                     
                     
                      String sql3="Select  * from welfarecandidate";
                 ps=con.prepareStatement(sql3);
                 rs=ps.executeQuery();
                  if(rs.next()){
                      VoteWelfare pv = new VoteWelfare();
                        pv.show();
                        this.dispose();
                      }
                else{
                      String sql4="Select  * from financialcandidate";
                      ps=con.prepareStatement(sql4);
                      rs=ps.executeQuery();
                      if(rs.next()){
                         VoteFinancial pv = new VoteFinancial();
                            pv.show();
                            this.dispose();
                          
                                   }
                     else{
                          String sql5="Select  * from secertarycandidate";
                      ps=con.prepareStatement(sql5);
                      rs=ps.executeQuery();
                    if(rs.next()){
                           VoteSecretary pv = new VoteSecretary();
                            pv.show();
                            this.dispose();
                          
                        }
                else {
                          String sql6="Select  * from organizercandidate";
                      ps=con.prepareStatement(sql6);
                      rs=ps.executeQuery();
                      if(rs.next()){
                          VoteOrganizer pv = new VoteOrganizer();
                            pv.show();
                            this.dispose();
                          
                        } else{
                          String sql1="Select  * from wucomcandidate";
                      ps=con.prepareStatement(sql1);
                      rs=ps.executeQuery();
                      if(rs.next()){
                          VoteWucom pv = new VoteWucom();
                            pv.show();
                            this.dispose();
                          
                                   }
                       else{
                          String sql2="Select  * from Treasurecandidate";
                      ps=con.prepareStatement(sql2);
                      rs=ps.executeQuery();
                      if(rs.next()){
                          VoteTreasure pv = new VoteTreasure();
                            pv.show();
                            this.dispose();
                          
                                   }
                           else{
                              String sql7="Select  * from presidentcandidate";
                      ps=con.prepareStatement(sql7);
                      rs=ps.executeQuery();
                      if(rs.next()){
                           VotePresident pv = new VotePresident();
                            pv.show();
                            this.dispose();
                          
                                   }else{
                                Thnaks pv = new Thnaks();
                                  pv.show();
                                  this.dispose();
                                 }
                            }
                         
                          
                         }
                      }
                   }
               }
                        
            }

                }    
                     
                  }else{
                            //Recording the details of student who is about to vote
                ps=con.prepareStatement("INSERT INTO vericationhistory (StudentID,code) values(?,?)");

                ps.setString(1, textStudentID.getText().trim());
                ps.setString(2, txtCode.getText());
                ps.execute();
                     
                     
                      String sql3="Select  * from welfarecandidate";
                 ps=con.prepareStatement(sql3);
                 rs=ps.executeQuery();
                  if(rs.next()){
                      VoteWelfare pv = new VoteWelfare();
                        pv.show();
                        this.dispose();
                      }
                else{
                      String sql4="Select  * from financialcandidate";
                      ps=con.prepareStatement(sql4);
                      rs=ps.executeQuery();
                      if(rs.next()){
                         VoteFinancial pv = new VoteFinancial();
                            pv.show();
                            this.dispose();
                          
                                   }
                     else{
                          String sql5="Select  * from secertarycandidate";
                      ps=con.prepareStatement(sql5);
                      rs=ps.executeQuery();
                    if(rs.next()){
                           VoteSecretary pv = new VoteSecretary();
                            pv.show();
                            this.dispose();
                          
                        }
                else {
                          String sql6="Select  * from organizercandidate";
                      ps=con.prepareStatement(sql6);
                      rs=ps.executeQuery();
                      if(rs.next()){
                          VoteOrganizer pv = new VoteOrganizer();
                            pv.show();
                            this.dispose();
                          
                        } else{
                          String sql1="Select  * from wucomcandidate";
                      ps=con.prepareStatement(sql1);
                      rs=ps.executeQuery();
                      if(rs.next()){
                          VoteWucom pv = new VoteWucom();
                            pv.show();
                            this.dispose();
                          
                                   }
                       else{
                          String sql2="Select  * from Treasurecandidate";
                      ps=con.prepareStatement(sql2);
                      rs=ps.executeQuery();
                      if(rs.next()){
                          VoteTreasure pv = new VoteTreasure();
                            pv.show();
                            this.dispose();
                          
                                   }
                           else{
                              String sql7="Select  * from presidentcandidate";
                      ps=con.prepareStatement(sql7);
                      rs=ps.executeQuery();
                      if(rs.next()){
                           VotePresident pv = new VotePresident();
                            pv.show();
                            this.dispose();
                          
                                   }else{
                                Thnaks pv = new Thnaks();
                                  pv.show();
                                  this.dispose();
                                 }
                            }
                         
                          
                         }
                      }
                   }
               }
                        
            }

                
                 }
                   
              
              
       }  else{
            JOptionPane.showMessageDialog(null, "No record Found");
            }  
  
        }else{
            JOptionPane.showMessageDialog(null, "Invalid Credentials");
            }
            }
       
                       
                 
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, e.getMessage());
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
 setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

    }//GEN-LAST:event_formWindowClosing

    private void textStudentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textStudentIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textStudentIDActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
             Menu C = new Menu();
                        C.show();
                       this.hide();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerifyStudentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerifyStudentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerifyStudentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerifyStudentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerifyStudentInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField textStudentID;
    private javax.swing.JTextField txtCode;
    // End of variables declaration//GEN-END:variables

void clear(){
    
    
                textStudentID.setText(" ");
                txtCode.setText(" ");

}


}
